{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanschluesche/Desktop/EnrollChecker/client/src/scenes/widgets/CoursesWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCourses } from \"state\";\nimport CourseWidget from \"./CourseWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CoursesWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false,\n    searchText\n  } = _ref;\n  const dispatch = useDispatch();\n  const courses = useSelector(state => state.courses);\n  const token = useSelector(state => state.token);\n  const getCourses = async () => {\n    const response = await fetch(\"http://localhost:3001/courses/show\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setCourses({\n      courses: data\n    }));\n  };\n  const getUserCourses = async () => {\n    const response = await fetch(`http://localhost:3001/users/${userId}/subscriptions`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setCourses({\n      courses: data\n    }));\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserCourses();\n    } else {\n      getCourses();\n    }\n    // eslint-disable-next-line\n  }, []);\n  const filteredCourses = courses.filter(course => {\n    const searchRegex = new RegExp(searchText, \"i\");\n    const designationMatch = searchRegex.test(course.courseDesignation);\n    const titleMatch = searchRegex.test(course.title);\n    return designationMatch || titleMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courses.map(_ref2 => {\n      let {\n        _id,\n        title,\n        credits,\n        termCode,\n        subjectCode,\n        courseID,\n        courseDesignation,\n        subscribed\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(CourseWidget, {\n        courseId: _id,\n        title: title,\n        credits: credits,\n        termCode: termCode,\n        subjectCode: subjectCode,\n        courseID: courseID,\n        courseDesignation: courseDesignation,\n        subscribed: subscribed\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(CoursesWidget, \"WgLiCOA+sUfTwVI8hYdHZg69jyc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CoursesWidget;\nexport default CoursesWidget;\nvar _c;\n$RefreshReg$(_c, \"CoursesWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setCourses","CourseWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","CoursesWidget","_ref","_s","userId","isProfile","searchText","dispatch","courses","state","token","getCourses","response","fetch","method","headers","Authorization","data","json","getUserCourses","filteredCourses","filter","course","searchRegex","RegExp","designationMatch","test","courseDesignation","titleMatch","title","children","map","_ref2","_id","credits","termCode","subjectCode","courseID","subscribed","courseId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathanschluesche/Desktop/EnrollChecker/client/src/scenes/widgets/CoursesWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCourses } from \"state\";\nimport CourseWidget from \"./CourseWidget\";\n\n\nconst CoursesWidget = ( { userId, isProfile = false, searchText}) => {\n   const dispatch = useDispatch();\n   const courses = useSelector((state) => state.courses);\n   const token = useSelector((state) => state.token);\n\n\n   const getCourses = async () => {\n       const response = await fetch (\"http://localhost:3001/courses/show\", {\n           method: \"GET\",\n           headers: { Authorization: `Bearer ${token}` },\n       });\n  \n   const data = await response.json();\n   dispatch(setCourses({ courses: data}));\n   };\n\n\n   const getUserCourses = async () => {\n       const response = await fetch (`http://localhost:3001/users/${userId}/subscriptions`,\n       {\n           method: \"GET\",\n           headers: { Authorization: `Bearer ${token}` },\n       });\n  \n   const data = await response.json();\n   dispatch(setCourses({ courses: data}));\n   };\n\n   useEffect(() => {\n       if (isProfile) {\n           getUserCourses();\n       } else {\n           getCourses();\n       }\n       // eslint-disable-next-line\n   }, []);\n\n   const filteredCourses = courses.filter((course) => {\n    const searchRegex = new RegExp(searchText, \"i\");\n    const designationMatch = searchRegex.test(course.courseDesignation);\n    const titleMatch = searchRegex.test(course.title);\n    return designationMatch || titleMatch;\n  });\n\n\n   return (\n       <>\n           {courses.map(\n               ({\n                   _id,\n                   title,\n                   credits,\n                   termCode,\n                   subjectCode,\n                   courseID,\n                   courseDesignation,\n                   subscribed,\n               }) => (\n                   <CourseWidget\n                   key={_id}\n                   courseId={_id}\n                   title={title}\n                   credits={credits}\n                   termCode={termCode}\n                   subjectCode={subjectCode}\n                   courseID={courseID}\n                   courseDesignation={courseDesignation}\n                   subscribed={subscribed}\n                   />\n               )\n           )}\n       </>\n   );\n};\n\n\nexport default CoursesWidget"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}