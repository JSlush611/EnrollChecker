{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  courses: [],\n  courseList: [],\n  filteredCourses: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setCourses: (state, action) => {\n      state.courses = action.payload.courses;\n    },\n    setSubscriptions: (state, action) => {\n      state.courseList = action.payload.courseList;\n    },\n    setFilter\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setCourses,\n  setSubscriptions\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","courses","courseList","filteredCourses","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setCourses","setSubscriptions","setFilter","actions","reducer"],"sources":["/Users/jonathanschluesche/Desktop/EnrollChecker/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    mode: \"light\",\n    user: null,\n    token: null,\n    courses: [],\n    courseList: [],\n    filteredCourses: []\n};\n\nexport const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        setMode: (state) => {\n            state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n        },\n        setLogin: (state, action) => {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n        },\n        setLogout: (state) => {\n            state.user = null;\n            state.token = null; \n        },\n        setCourses: (state, action) => {\n            state.courses = action.payload.courses;\n        },\n        setSubscriptions: (state, action) => {\n            state.courseList = action.payload.courseList;\n        },\n        setFilter\n    }\n})\n\nexport const { setMode, setLogin, setLogout, setCourses, setSubscriptions} = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE,EAAE;EACdC,eAAe,EAAE;AACrB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACNC,OAAO,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACV,IAAI,GAAGU,KAAK,CAACV,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACDW,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzBF,KAAK,CAACT,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;IACtC,CAAC;IACDY,SAAS,EAAGJ,KAAK,IAAK;MAClBA,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACR,KAAK,GAAG,IAAI;IACtB,CAAC;IACDa,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACV,OAAO;IAC1C,CAAC;IACDa,gBAAgB,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACN,UAAU,GAAGQ,MAAM,CAACC,OAAO,CAACT,UAAU;IAChD,CAAC;IACDa;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEC,UAAU;EAAEC;AAAgB,CAAC,GAAGV,SAAS,CAACY,OAAO;AAC9F,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}