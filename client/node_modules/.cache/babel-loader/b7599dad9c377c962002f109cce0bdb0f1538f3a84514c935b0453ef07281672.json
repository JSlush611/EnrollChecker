{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanschluesche/Desktop/EnrollChecker/client/src/scenes/widgets/CourseWidget.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Typography, useTheme, Button } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useState, useEffect } from \"react\";\nimport { setSubscriptions } from \"state\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseWidget = _ref => {\n  _s();\n  let {\n    courseId,\n    title,\n    credits,\n    termCode,\n    subjectCode,\n    courseID,\n    courseDesignation,\n    subscribed,\n    description\n  } = _ref;\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const loggedInUserId = useSelector(state => state.user._id);\n  const {\n    palette\n  } = useTheme();\n  const primary = palette.primary.main;\n  const isSubscribed = courseList.some(course => course.courseId === courseId);\n  const courseList = useSelector(state => state.courseList);\n  const subscribeCourse = async () => {\n    const response = await fetch(`http://localhost:3001/courses/subscribe/${loggedInUserId}/${courseId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setSubscriptions({\n      courseList: data\n    }));\n  };\n  const unsubscribeCourse = async () => {\n    const response = await fetch(`http://localhost:3001/courses/unsubscribe/${loggedInUserId}/${courseId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setSubscriptions({\n      courseList: data\n    }));\n  };\n  const handleToggleSubscription = async () => {\n    const isCurrentlySubscribed = courseList.some(course => course.courseId === courseId);\n    if (isCurrentlySubscribed) {\n      await unsubscribeCourse();\n      toast.error(\"Course successfully unsubscribed\", {\n        autoClose: 1200\n      });\n      const updatedCourseList = courseList.filter(course => course.courseId !== courseId);\n      setCourseList(updatedCourseList);\n    } else {\n      await subscribeCourse();\n      toast.success(\"Course successfully subscribed\", {\n        autoClose: 1200\n      });\n      const updatedCourseList = [...courseList, {\n        courseId,\n        title,\n        credits,\n        termCode,\n        subjectCode,\n        courseID,\n        courseDesignation,\n        description\n      }];\n      setCourseList(updatedCourseList);\n    }\n  };\n  useEffect(() => {\n    setIsSubscribed(subscribed);\n  }, [subscribed]);\n  return /*#__PURE__*/_jsxDEV(WidgetWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: primary\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Credits: ${credits}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Course Designation: ${courseDesignation}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          whiteSpace: \"pre-wrap\"\n        },\n        children: `\\nDescription: ${description}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleToggleSubscription,\n        sx: {\n          marginTop: \"1rem\"\n        },\n        children: isSubscribed ? \"Unsubscribe\" : \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      style: {\n        fontSize: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseWidget, \"AnQetfWBxNaiAlMs73q8pfYzsvw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useTheme, useSelector];\n});\n_c = CourseWidget;\nexport default CourseWidget;\nvar _c;\n$RefreshReg$(_c, \"CourseWidget\");","map":{"version":3,"names":["React","Box","Typography","useTheme","Button","useDispatch","useSelector","WidgetWrapper","useState","useEffect","setSubscriptions","ToastContainer","toast","jsxDEV","_jsxDEV","CourseWidget","_ref","_s","courseId","title","credits","termCode","subjectCode","courseID","courseDesignation","subscribed","description","dispatch","token","state","loggedInUserId","user","_id","palette","primary","main","isSubscribed","courseList","some","course","subscribeCourse","response","fetch","method","headers","Authorization","data","json","unsubscribeCourse","handleToggleSubscription","isCurrentlySubscribed","error","autoClose","updatedCourseList","filter","setCourseList","success","setIsSubscribed","children","p","variant","sx","color","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","onClick","marginTop","position","style","fontSize","_c","$RefreshReg$"],"sources":["/Users/jonathanschluesche/Desktop/EnrollChecker/client/src/scenes/widgets/CourseWidget.jsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Typography, useTheme, Button } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useState, useEffect } from \"react\";\nimport { setSubscriptions } from \"state\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nconst CourseWidget = ({\n  courseId,\n  title,\n  credits,\n  termCode,\n  subjectCode,\n  courseID,\n  courseDesignation,\n  subscribed,\n  description,\n}) => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const loggedInUserId = useSelector((state) => state.user._id);\n\n  const { palette } = useTheme();\n  const primary = palette.primary.main;\n\n  const isSubscribed = courseList.some((course) => course.courseId === courseId);\n  const courseList = useSelector((state) => state.courseList);\n\n  const subscribeCourse = async () => {\n    const response = await fetch (`http://localhost:3001/courses/subscribe/${loggedInUserId}/${courseId}`,{\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    const data = await response.json();\n    dispatch(setSubscriptions({courseList: data}));\n    \n  };\n\n  const unsubscribeCourse = async () => {\n    const response = await fetch (`http://localhost:3001/courses/unsubscribe/${loggedInUserId}/${courseId}`, {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    const data = await response.json();\n    dispatch(setSubscriptions({courseList: data}));\n  };\n\n  const handleToggleSubscription = async () => {\n    const isCurrentlySubscribed = courseList.some((course) => course.courseId === courseId);\n\n    if (isCurrentlySubscribed) {\n      await unsubscribeCourse();\n      toast.error(\"Course successfully unsubscribed\", {\n        autoClose: 1200,\n      });\n  \n      const updatedCourseList = courseList.filter((course) => course.courseId !== courseId);\n      setCourseList(updatedCourseList);\n    } else {\n      await subscribeCourse();\n      toast.success(\"Course successfully subscribed\", { autoClose: 1200 });\n  \n      const updatedCourseList = [...courseList, { courseId, title, credits, termCode, subjectCode, courseID, courseDesignation, description }];\n      setCourseList(updatedCourseList);\n    }\n  };\n\n  useEffect(() => {\n    setIsSubscribed(subscribed);\n  }, [subscribed]);\n\n  return (\n    <WidgetWrapper>\n      <Box p=\"1rem\">\n        <Typography variant=\"h6\" sx={{ color: primary }}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\">{`Credits: ${credits}`}</Typography>\n        <Typography variant=\"body1\">{`Course Designation: ${courseDesignation}`}</Typography>\n\n        <Typography variant=\"body1\" sx={{ whiteSpace: \"pre-wrap\" }}>{`\\nDescription: ${description}`}</Typography> {/* Add the new line */}\n        <Button\n          variant=\"outlined\"\n          onClick={handleToggleSubscription}\n          sx={{ marginTop: \"1rem\" }}\n        >\n          {isSubscribed ? \"Unsubscribe\" : \"Subscribe\"}\n          \n        </Button>\n      </Box>\n      <ToastContainer \n          position=\"bottom-right\" \n          style={{ fontSize: \"20px\",\n        }}/>\n    </WidgetWrapper>\n  );\n};\n\nexport default CourseWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}